# Generated by Django 2.2.4 on 2019-08-22 08:59

from django.db import connection as con, migrations
from psycopg2 import sql

# email_action | email_host
# email_action | email_port
# email_action | email_host_user
# email_action | email_host_password
# email_action | email_use_tls
# email_action | email_use_ssl
# email_action | notification_template
# email_action | notification_subject
# email_action | notification_sender
# logs | max_list_size
# core | help_url
# ontask | content_types
# ontask | max_upload_size
# action | email_host
# action | email_port
# action | email_host_user
# action | email_host_password
# action | email_use_tls
# action | email_use_ssl
# action | notification_template
# action | notification_subject
# action | notification_sender
# core | minute_step
# dataops | plugin_directory

def copy_site_preferences(apps, schema_editor):
    with con.cursor() as cursor:
        # Remove left over siteprefs for app email_action
        cursor.execute(
            sql.SQL(
                'DELETE FROM siteprefs_preference WHERE app = {0}').format(
                    sql.Literal('email_action')))

        # Change logs app to ontask
        cursor.execute(
            sql.SQL('UPDATE siteprefs_preference '
                    + 'SET app={0} where app={1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('logs')))

        # Change max_list_size to max_log_list_size
        cursor.execute(
            sql.SQL('UPDATE siteprefs_preference '
                    + 'SET name={0} where name={1}').format(
                    sql.Literal('max_log_list_size'),
                    sql.Literal('max_list_size')))

        # Change core app to ontask
        cursor.execute(
            sql.SQL(
                'UPDATE siteprefs_preference SET '
                + 'app={0} where app={1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('core')
                )
            )

        # Delete those in action that start with email_
        cursor.execute(
            sql.SQL(
                'DELETE FROM siteprefs_preference where '
                + 'app={0} and name LIKE {1}').format(
                    sql.Literal('action'),
                    sql.Literal('email_%')))


        # Change action app to ontask
        cursor.execute(
            sql.SQL(
                'UPDATE siteprefs_preference '
                + 'SET app = {0} where app = {1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('action')))

        # Delete minute_step
        cursor.execute(
            sql.SQL(
                'DELETE FROM siteprefs_preference where app={0} and '
                + 'name={1}').format(
                    sql.Literal('core'),
                    sql.Literal('minute_step')))

        # Change dataops app to ontask
        cursor.execute(
            sql.SQL(
                'UPDATE siteprefs_preference SET '
                + 'app={0} where app={1}').format(
                    sql.Literal('ontask'),
                    sql.Literal('dataops')))


class Migration(migrations.Migration):

    dependencies = [
        ('ontask', '0002_Version_6_UPGRADE'),
    ]

    operations = [
        migrations.RunPython(code=copy_site_preferences),
    ]
